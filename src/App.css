:root {
    --background-primary: rgba(243, 242, 247, 255);
    --text-primary: rgba(80, 79, 86, 255);
    --indicator-text-container-background: transparent;
    --indicator-text-container-text-color: var(--text-primary);
    --indicator-text-container-scale: 1;
    --indicator-text-container-translate-Y: 0px;
    --border-radius: 30px;
    --thumb-size: 24px;
    --thumb-scale: 1;
    --thumb-primary-color: #0366d6;
    --thumb-box-shadow: 0 0 4px rgba(0, 0, 0, 0.3),
        -3px 9px 9px rgba(255, 255, 255, 0.33) inset,
        -1px 3px 2px rgba(255, 255, 255, 0.33) inset,
        0 0 0 99px var(--thumb-primary-color) inset;
}

[slider-on-hover="true"] {
    --thumb-scale: 1.2;
    --indicator-text-container-background: var(--thumb-primary-color);
    --indicator-text-container-text-color: var(--background-primary);
    --indicator-text-container-scale: 1.1;
    --indicator-text-container-translate-Y: -10px;
}

.App {
    width: 100vw;
    height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
}

.sliderContainer {
    min-height: 100px;
    display: grid;
    grid-template-rows: 1fr 1fr 1fr;
    place-items: center normal;
}

.sliderInnerContainer {
    width: 100%;
    display: grid;
    place-items: center center;
    grid-column-start: 1;
    grid-row-start: 2;
}

.sliderProgressContainer,
.sliderBackground {
    width: 100%;
    grid-column-start: 1;
    grid-row-start: 1;
    border-radius: var(--border-radius);
}

.sliderProgressContainer {
    display: flex;
    align-items: center;
    justify-content: flex-start;
    z-index: 0;
}

.sliderProgress {
    height: 100%;
    border-radius: var(--border-radius);
}

.sliderBackground {
    background-color: var(--background-primary);
    z-index: -1;
}

.slider {
    grid-column-start: 1;
    grid-row-start: 1;
    -webkit-appearance: none; /* Override default CSS styles */
    appearance: none;
    width: 100%;
    background: transparent;
    outline: none;
    border-radius: var(--border-radius);
    box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2) inset;
    z-index: 1;
}

.slider::-webkit-slider-thumb {
    -webkit-appearance: none; /* Override default CSS styles */
    appearance: none;
    width: var(--thumb-size); /* Set a specific slider handle width */
    height: var(--thumb-size); /* Slider handle height */
    transform: scale(var(--thumb-scale));
    background: var(----thumb-primary-color);
    cursor: grab; /* Cursor on hover */
    border-radius: var(--border-radius);
    box-shadow: var(--thumb-box-shadow);
    border: 0px solid transparent;
}

.slider::-moz-range-thumb {
    width: var(--thumb-size); /* Set a specific slider handle width */
    height: var(--thumb-size); /* Slider handle height */
    transform: scale(var(--thumb-scale));

    background: var(----thumb-primary-color);
    cursor: grab; /* Cursor on hover */
    border-radius: var(--border-radius);
    box-shadow: var(--thumb-box-shadow);
    border: 0px solid transparent;
}

.currentValueIndicator {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    font-weight: 600;
    grid-column-start: 1;
    grid-row-start: 1;
}

.currentValueIndicatorTextContainer {
    padding: 5px;
    border-radius: var(--border-radius);
    background-color: var(--indicator-text-container-background);
    color: var(--indicator-text-container-text-color);
    transform: translateY(var(--indicator-text-container-translate-Y))
        scale(var(--indicator-text-container-scale));
}

.minMaxIndicator {
    display: grid;
    grid-column-start: 1;
    grid-row-start: 3;
    grid-template-columns: 1fr 1fr;
}

.minIndicator,
.maxIndicator {
    display: flex;
    align-items: center;
    color: var(--text-primary);
    font-weight: 500;
}

.minIndicator {
    grid-column-start: 1;
    justify-content: flex-start;
}

.maxIndicator {
    grid-column-start: 2;
    justify-content: flex-end;
}

@media (prefers-reduced-motion: no-preference) {
    .slider::-webkit-slider-thumb {
        transition: transform 0.2s ease;
    }

    .slider::-moz-range-thumb {
        transition: transform 0.2s ease;
    }

    .currentValueIndicatorTextContainer {
        transition: transform 0.2s ease;
    }
}
